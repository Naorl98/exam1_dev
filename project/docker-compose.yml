services:
  db:
    image: postgres:14
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: gutendex
      POSTGRES_USER: gutendex
      POSTGRES_PASSWORD: gutendex  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gutendex"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    env_file:
      - gutendex/.env
    volumes:
      - /static:/var/www/gutendex/static-root
      - media_data:/var/www/gutendex/media
      - app_logs:/var/log/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - frontend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - /static:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      - nginx_logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - frontend

networks:
  backend:
    internal: true
  frontend:

volumes:
  db_data: {}
  media_data: {}
  app_logs: {}
  nginx_logs: {}
